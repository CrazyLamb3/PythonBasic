# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]
import random

def generate(n, a, b):
    l1 = []
    for i in range(n):
        y = random.randrange(-100, 100)
        l1.append(y)
    return (l1)

l = [2, -5, 8, 9, -25, 25, 4]
print('Исходный список', l)
l1 = []
y = 0
for i in l:
    if (i <= 0) or ((i ** 0.5)*2) % 2 != 0.0:
        pass
    elif ((i ** 0.5)*2) % 2 == 0.0:
        y = int(i ** .5)
        l1.append(y)
print("Полученный список:", l1)

# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)
#словари по дням и месяцам

day = {'01': 'первое',
       '02': 'второе',
       '03': 'третье',
       '04': 'четвертое',
       '05': 'пятое',
       '06': 'шестое',
       '07': 'седьмое',
       '08': 'восьмое',
       '09': 'девятое',
       '10': 'десятое',
       '11': 'одиннадцатое',
       '12': 'двенадцатое',
       '13': 'триннадцатое',
       '14': 'четырнадцатое',
       '15': 'пятнадцатое',
       '16': 'шестнадцатое',
       '17': 'семнадцатое',
       '18': 'восемнадцатое',
       '19': 'девятнадцатое',
       '20': 'двацатое',
       '21': 'двадцатьпервое',
       '22': 'двадцатьвторое',
       '23': 'двадцатьтретье',
       '24': 'двадццатьчетвертое',
       '25': 'двадцатьпятое',
       '26': 'двадцатьшестое',
       '27': 'двадцатьседьмое',
       '28': 'двадцатьвосьмое',
       '29': 'двадцатьдевятое',
       '30': 'тридцатое',
       '31': 'тридцатьпервое'}

month = {'01': 'января',
         '02': 'февраля',
         '03': 'марта',
         '04': 'апреля',
         '05': 'мая',
         '06': 'июня',
         '07': 'июля',
         '08': 'августа',
         '09': 'сентября',
         '10': 'октября',
         '11': 'ноября',
         '12': 'декабря'}

date = input('Введите дату в формате dd.mm.yyyy:')

date = date.split('.')
input_day = date[0]
input_month = date[1]
input_year = date[2]

if (1 <= int(input_day) <= 31) and (1 <= int(input_month) <= 12) and (1 <= int(input_year) <= 9999) and (len(input_day) == 2) and (len(input_month) == 2) and (len(input_year) == 4):
    print('Вы ввели дату: {}.{}.{}'.format(input_day, input_month, input_year))
    input_day = day.pop(input_day)
    input_month = month.pop(input_month)
    print('Вы ввели: {} {} {} года'.format(input_day, input_month, input_year))
else:
    print('Вы ввели некорректное значение')



#  Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random
# Выполнение без функции
# import random
# n = int(input('Введите число элементов списка:'))
# l1 = []
# for i in range(n):
#     y = random.randint(-100, 100)
#     l1.append(y)
#
# print(l1)

# Выполннение используя функцию написанную выше
n = int(input('Введите число элементов списка:'))
a = int(input('Введите нижнюю границу генератора чисел'))
b = int(input('Введите верхнюю границу генератора чисел'))

l1 = generate(n, a, b)

print('Сгенерированный список из {} значениий в диапазоне от {} до {}:{}'.format(n, a, b, l1))

# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут:
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
#  например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]
l1 = [1, 2, 10, 4, 5, 6, 2, 5, 2, 6, 6]
print('Исходный список:{}'.format(l1))

l2 = []
set1 = set(l1)
l2 = list(set1)
print('Задание А:', l2)

l1 = [1, 2, 10, 4, 5, 6, 2, 5, 2, 6, 6]
l2 = []

l2 = []
for i in l1:
    if l1.count(i) == 1:
        l2.append(i)

print('Задание Б:', l2)



